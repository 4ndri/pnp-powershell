name: Nightly Release to PowerShell Gallery and Docker Hub

on:
  workflow_dispatch:
  schedule:
  - cron: '30 2 * * *'
jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: | 
          3.1.301
          5.x
    - uses: actions/checkout@v2
      with:
        ref: dev
        token: ${{ secrets.PAT }}
  publish-docker-windows-2022:
    runs-on: windows-2022
    needs: [ build ]
    steps:
    - uses: actions/checkout@v2
    - name: Build an image
      run: |
        VERSION=$(cat ./version.txt)-nightly
        docker build --build-arg "PNP_MODULE_VERSION=$VERSION" --build-arg "BASE_IMAGE_SUFFIX=nanoserver-ltsc2022" --build-arg "INSTALL_USER=ContainerAdministrator" --build-arg "SKIP_PUBLISHER_CHECK=True" ./docker -f ./docker/pnppowershell.dockerFile --tag ${{ secrets.DOCKER_USERNAME }}/powershell:$VERSION-nanoserver-ltsc2022;
    - name: Push the image
      run: |
        VERSION=$(cat ./version.txt)-nightly
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p '${{ secrets.DOCKER_PASSWORD }}'
        docker push ${{ secrets.DOCKER_USERNAME }}/powershell:$VERSION-nanoserver-ltsc2022
  publish-docker-windows-2019:
    runs-on: windows-2019
    needs: [ build ]
    steps:
    - uses: actions/checkout@v2
    - name: Build an image
      run: |
        VERSION=$(cat ./version.txt)-nightly
        docker build --build-arg "PNP_MODULE_VERSION=$VERSION" --build-arg "BASE_IMAGE_SUFFIX=nanoserver-1809" --build-arg "INSTALL_USER=ContainerAdministrator" --build-arg "SKIP_PUBLISHER_CHECK=True" ./docker -f ./docker/pnppowershell.dockerFile --tag ${{ secrets.DOCKER_USERNAME }}/powershell:$VERSION-nanoserver-1809;
    - name: Push the image
      run: |
        VERSION=$(cat ./version.txt)-nightly
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p '${{ secrets.DOCKER_PASSWORD }}'
        docker push ${{ secrets.DOCKER_USERNAME }}/powershell:$VERSION-nanoserver-1809
  publish-docker-linux:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
    - uses: actions/checkout@v2
    - name: Build an image
      run: |
        VERSION=$(cat ./version.txt)-nightly
        docker build --build-arg "PNP_MODULE_VERSION=$VERSION" --build-arg "BASE_IMAGE_SUFFIX=alpine-3.14" --build-arg "INSTALL_USER=root" --build-arg "SKIP_PUBLISHER_CHECK=False" ./docker -f ./docker/pnppowershell.dockerFile --tag ${{ secrets.DOCKER_USERNAME }}/powershell:$VERSION-alpine-3.14;
    - name: Tag the image
      run: |
        VERSION=$(cat ./version.txt)-nightly
        docker image tag ${{ secrets.DOCKER_USERNAME }}/powershell:$VERSION-alpine-3.14 ${{ secrets.DOCKER_USERNAME }}/powershell:nightly
    - name: Push the image
      run: |
        VERSION=$(cat ./version.txt)-nightly
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p '${{ secrets.DOCKER_PASSWORD }}'
        docker push ${{ secrets.DOCKER_USERNAME }}/powershell:$VERSION-alpine-3.14
        docker push ${{ secrets.DOCKER_USERNAME }}/powershell:nightly
